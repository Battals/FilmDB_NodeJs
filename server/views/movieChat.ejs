<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FilmDB</title>
    <link rel="stylesheet" href="/client/CSS/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <script src="/client/JS/client.js"></script>
</head>
<header>
    <a href="/">
        <h1 style="font-family: FontAwesome;">FilmDB.dk</h1>
    </a>
    <nav>
        <% if (isLoggedIn) { %>
            <a href="/">Populære film</a>
            <a href="/upcomingMovies">Kommende film</a>
            <a href="/findMovie">Find film</a>
            <a href="/myProfile">Min side</a>
            <a href="/myAccount">Min profil</a>
            <a href="/movieChat">Chat</a>
            <a style="color: red;" href="/signout">Log ud</a>
            <% } else { %>
                <a href="login">Login</a>
                <a href="/register">Opret bruger</a>
                <a href="/">Populære film</a>
                <a href="upcomingMovies">Kommende film</a>
                <a href="findMovie">Find film</a>
                <a href="/movieChat">Chat</a>
                <% } %>
    </nav>
</header>

<body>
    <div style="text-align: center; margin-top: 20px;">
        <p>Udforsk og diskutér nyeste film, og del dine personlige filmlister med fællesskabet</p>
    </div>
    <div id="chat-container">
        <div id="chat-header">FilmDB-chat</div>
        <div id="activeUsers">
            <span id="connectedClientsCount"></span>
            <span class="green-dot"></span>
        </div>
        <div id="chat-messages">

        </div>
        <div id="input-box">
            <input type="text" id="message-input" placeholder="Send en besked...">
            <button id="send-button" style="height: fit-content;">Send</button>
        </div>
            <div id="chatBtns">
            <button id="favoriteBtn" onclick="shareMovieList('Favorit')">
                <i style="color: #007bff; font-size: smaller;" class="fas fa-bookmark"> Del Favorit-liste</i>
              </button>
              <button id="seenBtn" onclick="shareMovieList('Set')">
                <i class="fas fa-eye" style="font-size: smaller;"> Del Set-liste</i>
              </button>
            </div>
        </div>
    </div>

</body>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io()

const user = localStorage.getItem("user_name")

    socket.on("connectedClientsCount", (clientsConnected) => {
        const clientCountElement = document.getElementById("connectedClientsCount")
        clientCountElement.innerText = innerText = "Aktive brugere: " + clientsConnected

    })

    const sendBtn = document.getElementById("send-button")
    const chatBox = document.getElementById("chat-messages")


    sendBtn.addEventListener("click", () => {

        const message = document.getElementById("message-input").value
        
        const messageObject = {
            username: user || "Ukendt bruger",
            message: message
        }

        const chatMessage = document.createElement("p");
        chatMessage.id = "chatElement";

        const usernameSpan = document.createElement("span");
        usernameSpan.style.fontWeight = "600";
        usernameSpan.textContent = `${messageObject.username}: `

        chatMessage.appendChild(usernameSpan);
        chatMessage.innerHTML += messageObject.message;

        chatBox.appendChild(chatMessage);


        socket.emit("sendMessage", (messageObject))

    })

    socket.on("recieveMessage", (messageObject) => {
        const chatMessage = document.createElement("p");
        chatMessage.id = "chatElement";

        const usernameSpan = document.createElement("span");
        usernameSpan.style.fontWeight = "600";
        usernameSpan.textContent = `${messageObject.username}: `

        chatMessage.appendChild(usernameSpan);
        chatMessage.innerHTML += messageObject.message;

        chatBox.appendChild(chatMessage);
    });

    async function shareMovieList(type) {
  try {
      const response = await fetch(`/userMovies/${type}`);

      if (response.status === 200) {
      const result = await response.json();
      const movieList = result.movies;

      const messageObject = {
        username: user,
        message: `${type}-liste: `,
      };

      for (const movieId of movieList) {
        const movieResponse = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=da`);
        const movieData = await movieResponse.json();
        messageObject.message += `( <strong>${movieData.title}</strong> / <em>${movieData.release_date}</em> ) `

        console.log("movieData", movieData)
        
      }
      const chatMessage = document.createElement("p");
        chatMessage.id = "chatElement";

        const usernameSpan = document.createElement("span");
        usernameSpan.style.fontWeight = "600";
        usernameSpan.textContent = `${messageObject.username}: `

        chatMessage.appendChild(usernameSpan);
        chatMessage.innerHTML += messageObject.message;

        chatBox.appendChild(chatMessage);
      socket.emit("sendMessage", (messageObject));

      } else {
          const error = await response.json()
          toastr.error(error.errorMessage)
      }
  } catch (error) {
      console.error("Fetch error:", error);
  }

}

</script>
</html>
